{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\credit\\\\src\\\\components\\\\EditHomePage\\\\CreditProofServices.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport * as USERAPI from \"../../api/EditHomePageApi\";\nimport * as CONFIG from \"../../config.json\";\nimport { CreateNotification } from \"../../Utils/notification\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { usePlacesWidget } from \"react-google-autocomplete\";\nimport { Loader } from \"../common/Loader/loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditHomePage = props => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [creditProofServicesEnglish, setCreditProofServicesEnglish] = useState('');\n  const [creditProofServicesFrench, setCreditProofServicesFrench] = useState('');\n  const [creditProofServicesImage, setCreditProofServicesImage] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const isFormValid = e => {\n    let error = {};\n    let formIsValid = true;\n\n    if (!creditProofServicesEnglish || !creditProofServicesEnglish.trim()) {\n      formIsValid = false;\n      error['creditProofServicesEnglish'] = \"Please Enter your Credit Proof Services English\";\n    }\n\n    if (!creditProofServicesFrench || !creditProofServicesFrench.trim()) {\n      formIsValid = false;\n      error['creditProofServicesFrench'] = \"Please Enter your Credit Proof Services French\";\n    }\n\n    if (!creditProofServicesImage && !creditProofServicesImage.trim()) {\n      formIsValid = false;\n      error['creditProofServicesImage'] = \"Please select your Credit Proof Services Image\";\n    }\n\n    setErrors(error);\n    return formIsValid;\n  };\n\n  const handleProfileImage = e => {\n    const fileValid = e.target.files[0].type;\n\n    if (fileValid == \"image/png\" || fileValid == \"image/jpg\" || fileValid == \"image/jpeg\") {\n      setCreditProofServicesImage(e.target.files[0]);\n      console.log(e.target.files[0]);\n    } else {\n      CreateNotification('warning', \"please selete photo\");\n    }\n  };\n\n  const EditHomepage = async () => {\n    console.log(creditProofServicesImage, \"sssssssss\");\n    const isValid = await isFormValid();\n\n    if (isValid) {\n      if (creditProofServicesImage) {\n        let formData = new FormData();\n        formData.append(\"creditProofServicesImage\", creditProofServicesImage);\n        formData.append(\"creditProofServicesEnglish\", creditProofServicesEnglish);\n        formData.append(\"creditProofServicesFrench\", creditProofServicesFrench);\n        const Response = await USERAPI.UpdateHomePageAPI(formData);\n\n        if (Response.data.status == 200) {\n          let allData = Response && Response.data && Response.data.data;\n          CreateNotification(\"success\", \"Credit Proof Service Text Update Successfully\");\n          setLoading(false);\n        } else if (Response.data.status == 401) {\n          CreateNotification(\"danger\", \"Session has been expired!\");\n          localStorage.clear();\n          props.history.push('/login');\n        } else {\n          CreateNotification(\"danger\", \"Something went wrong, please try again later!\");\n        }\n      } else {\n        console.log(creditProofServicesImage, \"nnnnnnnnnnnnn\");\n        let formData = new FormData();\n        formData.append(\"creditProofServicesEnglish\", creditProofServicesEnglish);\n        formData.append(\"creditProofServicesFrench\", creditProofServicesFrench);\n        const Response = await USERAPI.UpdateHomePageAPI(formData);\n\n        if (Response.data.status == 200) {\n          let allData = Response && Response.data && Response.data.data;\n          CreateNotification(\"success\", \"Credit Proof Service Text Update Successfully\");\n          setLoading(false);\n        } else if (Response.data.status == 401) {\n          CreateNotification(\"danger\", \"Session has been expired!\");\n          localStorage.clear();\n          props.history.push('/login');\n        } else {\n          CreateNotification(\"danger\", \"Something went wrong, please try again later!\");\n        }\n      }\n    }\n  };\n\n  const getHomePageDataFun = async () => {\n    const Response = await USERAPI.getHomePageDataAPI(); // console.log(Response,\"tttttttttttttttttttttttttttttttttttttttttttt\");\n\n    if (Response.data.status == 200) {\n      const allData = Response && Response.data && Response.data.data;\n      console.log(allData.creditProofServicesImage, \"hellosxsssssssssssssssssssssssssssssssssssssss  \");\n      setCreditProofServicesEnglish(allData.creditProofServicesEnglish);\n      setCreditProofServicesFrench(allData.creditProofServicesFrench);\n      setCreditProofServicesImage(allData.creditProofServicesImage);\n    } else if (Response.data.status == 401) {\n      CreateNotification(\"danger\", \"Session has been expired!\");\n      localStorage.clear();\n      props.history.push('/login');\n    } else {\n      CreateNotification(\"danger\", \"Something went wrong, please try again later!\");\n    }\n  };\n\n  useEffect(async () => {\n    getHomePageDataFun();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 grid-margin\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between flex-wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex align-items-end flex-wrap\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mr-md-3 mr-xl-5\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Credit Proof Services\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 grid-margin\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body home-page-admin-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group fullNameSec col-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"fullName\",\n                  children: \"Credit Proof Services Text In English\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  type: \"text\",\n                  class: \"form-control\",\n                  value: creditProofServicesEnglish,\n                  onChange: e => setCreditProofServicesEnglish(e.target.value),\n                  children: \"  \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error_mesage\",\n                  children: [\" \", errors.creditProofServicesEnglish, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group fullNameSec col-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"fullName\",\n                  children: \"Credit Proof Services Text In French\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  type: \"text\",\n                  class: \"form-control\",\n                  value: creditProofServicesFrench,\n                  onChange: e => setCreditProofServicesFrench(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error_mesage\",\n                  children: [\" \", errors.creditProofServicesFrench, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group fullNameSec browseSec col-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Upload Credit Proof Services Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"uploadBtn\",\n                  for: \"upload\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"uploadIcon\",\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fa fa-upload\",\n                      \"aria-hidden\": \"true\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 70\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    class: \"isVisuallyHidden1\",\n                    id: \"upload\",\n                    type: \"file\",\n                    onChange: handleProfileImage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"m-0\",\n                    children: \"Upload\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error_mesage\",\n                  children: [\" \", errors.creditProofServicesImage, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-12\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-update\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => EditHomepage(),\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 24\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditHomePage, \"eDeUTHx0vNnCuM8Y2QmrBzXEzm0=\");\n\n_c = EditHomePage;\nexport default EditHomePage; // <div className=\"form-group fullNameSec col-6\">\n// <label for=\"fullName\">Test Imonials Text In English</label>\n// <textarea type=\"text\"\n//     class=\"form-control\"\n//     value={testimonialsEnglish}\n//     onChange={(e) => setTestimonialsEnglish(e.target.value)}\n// >  </textarea>\n// <p className=\"error_mesage\"> {errors.FirstName} </p>\n// </div>\n// <div className=\"form-group fullNameSec col-6\">\n// <label for=\"fullName\">Test Imonials Text In French</label>\n// <textarea type=\"text\"\n//     class=\"form-control\"\n//     value={testimonialsFrench}\n//     onChange={(e) => setTestimonialsFrench(e.target.value)}\n// ></textarea>\n// <p className=\"error_mesage\"> {errors.creditProofServicesFrench} </p>\n// </div>\n// <div className=\"form-group fullNameSec col-6\">\n// <label for=\"fullName\">Banner Heading Text In English</label>\n// <textarea type=\"text\"\n//     class=\"form-control\"\n//     value={bannerheadingEnglish}\n//     onChange={(e) => setBannerheadingEnglish(e.target.value)}\n// >  </textarea>\n// <p className=\"error_mesage\"> {errors.FirstName} </p>\n// </div>\n// <div className=\"form-group fullNameSec col-6\">\n// <label for=\"fullName\">Banner Heading Text  Text In French</label>\n// <textarea type=\"text\"\n//     class=\"form-control\"\n//     value={bannerheadingFrench}\n//     onChange={(e) => setBannerheadingFrench(e.target.value)}\n// ></textarea>\n// <p className=\"error_mesage\"> {errors.creditProofServicesFrench} </p>\n// </div>\n// <div className=\"form-group fullNameSec col-6\">\n// <label for=\"fullName\">banner Content   Text In English</label>\n// <textarea type=\"text\"\n//     class=\"form-control\"\n//     value={bannerContentEnglish}\n//     onChange={(e) => setBannerContenteEnglish(e.target.value)}\n// >  </textarea>\n// <p className=\"error_mesage\"> {errors.FirstName} </p>\n// </div>\n// <div className=\"form-group fullNameSec col-6\">\n// <label for=\"fullName\">banner Conten Text In French</label>\n// <textarea type=\"text\"\n//     class=\"form-control\"\n//     value={bannerContentFrench}\n//     onChange={(e) => setBannerContentFrench(e.target.value)}\n// ></textarea>\n// <p className=\"error_mesage\"> {errors.creditProofServicesFrench} </p>\n// </div>\n\nvar _c;\n\n$RefreshReg$(_c, \"EditHomePage\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/credit/src/components/EditHomePage/CreditProofServices.js"],"names":["React","useState","useEffect","USERAPI","CONFIG","CreateNotification","Link","useParams","usePlacesWidget","Loader","EditHomePage","props","loading","setLoading","creditProofServicesEnglish","setCreditProofServicesEnglish","creditProofServicesFrench","setCreditProofServicesFrench","creditProofServicesImage","setCreditProofServicesImage","errors","setErrors","isFormValid","e","error","formIsValid","trim","handleProfileImage","fileValid","target","files","type","console","log","EditHomepage","isValid","formData","FormData","append","Response","UpdateHomePageAPI","data","status","allData","localStorage","clear","history","push","getHomePageDataFun","getHomePageDataAPI","value"],"mappings":"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","sourcesContent":["\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport * as USERAPI from \"../../api/EditHomePageApi\";\r\nimport * as CONFIG from \"../../config.json\";\r\nimport { CreateNotification } from \"../../Utils/notification\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { usePlacesWidget } from \"react-google-autocomplete\";\r\nimport { Loader } from \"../common/Loader/loader\";\r\nconst EditHomePage = (props) => {\r\n\r\n \r\n    const [loading, setLoading] = useState(false)\r\n    const [creditProofServicesEnglish, setCreditProofServicesEnglish] = useState('')\r\n    const [creditProofServicesFrench, setCreditProofServicesFrench] = useState('')\r\n    const [creditProofServicesImage, setCreditProofServicesImage] = useState(\"\")\r\n    const [errors, setErrors] = useState([])\r\n\r\n\r\n\r\n\r\n    const isFormValid = (e) => {\r\n        let error = {};\r\n        let formIsValid = true;\r\n        if (!creditProofServicesEnglish || !creditProofServicesEnglish.trim()) {\r\n            formIsValid = false;\r\n            error['creditProofServicesEnglish'] = \"Please Enter your Credit Proof Services English\"\r\n        }\r\n        if (!creditProofServicesFrench || !creditProofServicesFrench.trim()) {\r\n            formIsValid = false;\r\n            error['creditProofServicesFrench'] = \"Please Enter your Credit Proof Services French\"\r\n        }\r\n        if (!creditProofServicesImage && !creditProofServicesImage.trim()) {\r\n            formIsValid = false\r\n            error['creditProofServicesImage'] = \"Please select your Credit Proof Services Image\"\r\n        }\r\n        setErrors(error)\r\n        return formIsValid;\r\n    }\r\n\r\n    const handleProfileImage = (e) => {\r\n        const fileValid = e.target.files[0].type\r\n        if (fileValid == \"image/png\" || fileValid == \"image/jpg\" ||\r\n            fileValid == \"image/jpeg\") {\r\n            setCreditProofServicesImage(e.target.files[0])\r\n            console.log(e.target.files[0]);\r\n        } else {\r\n            CreateNotification('warning', \"please selete photo\")\r\n        }\r\n\r\n    }\r\n    const EditHomepage = async () => {\r\n        console.log(creditProofServicesImage,\"sssssssss\");\r\n        const isValid = await isFormValid();\r\n      \r\n        if(isValid){\r\n            if(creditProofServicesImage){\r\n                let formData = new FormData();\r\n                formData.append(\"creditProofServicesImage\", creditProofServicesImage)\r\n                formData.append(\"creditProofServicesEnglish\", creditProofServicesEnglish)\r\n                formData.append(\"creditProofServicesFrench\", creditProofServicesFrench)\r\n                const Response = await USERAPI.UpdateHomePageAPI(formData);\r\n                if (Response.data.status == 200) {\r\n                    let allData = Response && Response.data && Response.data.data\r\n                    CreateNotification(\"success\", \"Credit Proof Service Text Update Successfully\")\r\n                    setLoading(false)\r\n                }\r\n                else if (Response.data.status == 401) {\r\n                    CreateNotification(\"danger\", \"Session has been expired!\")\r\n                    localStorage.clear();\r\n                    props.history.push('/login')\r\n                }\r\n                else {\r\n                    CreateNotification(\"danger\", \"Something went wrong, please try again later!\")\r\n                }\r\n            }else{\r\n                console.log(creditProofServicesImage,\"nnnnnnnnnnnnn\");\r\n                let formData = new FormData();\r\n                formData.append(\"creditProofServicesEnglish\", creditProofServicesEnglish)\r\n                formData.append(\"creditProofServicesFrench\", creditProofServicesFrench)\r\n                const Response = await USERAPI.UpdateHomePageAPI(formData);\r\n                if (Response.data.status == 200) {\r\n                    let allData = Response && Response.data && Response.data.data\r\n                    CreateNotification(\"success\", \"Credit Proof Service Text Update Successfully\")\r\n                    setLoading(false)\r\n                }\r\n                else if (Response.data.status == 401) {\r\n                    CreateNotification(\"danger\", \"Session has been expired!\")\r\n                    localStorage.clear();\r\n                    props.history.push('/login')\r\n                }\r\n                else {\r\n                    CreateNotification(\"danger\", \"Something went wrong, please try again later!\")\r\n                }\r\n            }\r\n          \r\n        }\r\n      \r\n    }\r\n\r\n    const getHomePageDataFun = async () => {\r\n        const Response = await USERAPI.getHomePageDataAPI();\r\n        // console.log(Response,\"tttttttttttttttttttttttttttttttttttttttttttt\");\r\n        if (Response.data.status == 200) {\r\n       \r\n          const allData = Response && Response.data && Response.data.data\r\n          console.log(allData.creditProofServicesImage,\"hellosxsssssssssssssssssssssssssssssssssssssss  \");\r\n            setCreditProofServicesEnglish(allData.creditProofServicesEnglish)\r\n            setCreditProofServicesFrench(allData.creditProofServicesFrench)\r\n            setCreditProofServicesImage(allData.creditProofServicesImage)\r\n                  \r\n        }\r\n        else if (Response.data.status == 401) {\r\n          CreateNotification(\"danger\", \"Session has been expired!\");\r\n          localStorage.clear();\r\n          props.history.push('/login')\r\n        }\r\n        else {\r\n          CreateNotification(\"danger\", \"Something went wrong, please try again later!\")\r\n        }\r\n    \r\n      }\r\n\r\n    useEffect(async () => {\r\n        getHomePageDataFun();\r\n      }, []);\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 grid-margin\">\r\n                    <div className=\"d-flex justify-content-between flex-wrap\">\r\n                        <div className=\"d-flex align-items-end flex-wrap\">\r\n                            <div className=\"mr-md-3 mr-xl-5\">\r\n                                <h3>Credit Proof Services</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 grid-margin\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body home-page-admin-form\">\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group fullNameSec col-6\">\r\n                                    <label for=\"fullName\">Credit Proof Services Text In English</label>\r\n                                    <textarea type=\"text\"\r\n                                        class=\"form-control\"\r\n                                        value={creditProofServicesEnglish}\r\n                                        onChange={(e) => setCreditProofServicesEnglish(e.target.value)}\r\n                                    >  </textarea>\r\n                                    <p className=\"error_mesage\"> {errors.creditProofServicesEnglish} </p>\r\n                                </div>\r\n                                <div className=\"form-group fullNameSec col-6\">\r\n                                    <label for=\"fullName\">Credit Proof Services Text In French</label>\r\n                                    <textarea type=\"text\"\r\n                                        class=\"form-control\"\r\n                                        value={creditProofServicesFrench}\r\n                                        onChange={(e) => setCreditProofServicesFrench(e.target.value)}\r\n                                    ></textarea>\r\n                                    <p className=\"error_mesage\"> {errors.creditProofServicesFrench} </p>\r\n                                </div>\r\n                                <div className=\"form-group fullNameSec browseSec col-6\">\r\n                                    <label>Upload Credit Proof Services Image</label>\r\n                                    <label className=\"uploadBtn\" for=\"upload\">\r\n                                        <span className=\"uploadIcon\"><i className=\"fa fa-upload\" aria-hidden=\"true\"></i></span>\r\n                                        <input class=\"isVisuallyHidden1\" id=\"upload\" type=\"file\"\r\n                                     \r\n                                            onChange={handleProfileImage}\r\n                                        />\r\n                                        <p className=\"m-0\">Upload</p>\r\n                                    </label>\r\n                                    <p className=\"error_mesage\"> {errors.creditProofServicesImage} </p>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12\">\r\n                                    <div className=\"form-update\">\r\n                                        <button onClick={() => EditHomepage()}>Update</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {loading ? <Loader /> : null}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default EditHomePage;\r\n\r\n\r\n// <div className=\"form-group fullNameSec col-6\">\r\n// <label for=\"fullName\">Test Imonials Text In English</label>\r\n// <textarea type=\"text\"\r\n//     class=\"form-control\"\r\n\r\n//     value={testimonialsEnglish}\r\n//     onChange={(e) => setTestimonialsEnglish(e.target.value)}\r\n\r\n// >  </textarea>\r\n// <p className=\"error_mesage\"> {errors.FirstName} </p>\r\n// </div>\r\n// <div className=\"form-group fullNameSec col-6\">\r\n// <label for=\"fullName\">Test Imonials Text In French</label>\r\n// <textarea type=\"text\"\r\n//     class=\"form-control\"\r\n\r\n//     value={testimonialsFrench}\r\n//     onChange={(e) => setTestimonialsFrench(e.target.value)}\r\n// ></textarea>\r\n// <p className=\"error_mesage\"> {errors.creditProofServicesFrench} </p>\r\n// </div>\r\n\r\n// <div className=\"form-group fullNameSec col-6\">\r\n// <label for=\"fullName\">Banner Heading Text In English</label>\r\n// <textarea type=\"text\"\r\n//     class=\"form-control\"\r\n//     value={bannerheadingEnglish}\r\n//     onChange={(e) => setBannerheadingEnglish(e.target.value)}\r\n// >  </textarea>\r\n// <p className=\"error_mesage\"> {errors.FirstName} </p>\r\n// </div>\r\n// <div className=\"form-group fullNameSec col-6\">\r\n// <label for=\"fullName\">Banner Heading Text  Text In French</label>\r\n// <textarea type=\"text\"\r\n//     class=\"form-control\"\r\n//     value={bannerheadingFrench}\r\n//     onChange={(e) => setBannerheadingFrench(e.target.value)}\r\n// ></textarea>\r\n// <p className=\"error_mesage\"> {errors.creditProofServicesFrench} </p>\r\n// </div>\r\n// <div className=\"form-group fullNameSec col-6\">\r\n// <label for=\"fullName\">banner Content   Text In English</label>\r\n// <textarea type=\"text\"\r\n//     class=\"form-control\"\r\n//     value={bannerContentEnglish}\r\n//     onChange={(e) => setBannerContenteEnglish(e.target.value)}\r\n// >  </textarea>\r\n// <p className=\"error_mesage\"> {errors.FirstName} </p>\r\n// </div>\r\n// <div className=\"form-group fullNameSec col-6\">\r\n// <label for=\"fullName\">banner Conten Text In French</label>\r\n// <textarea type=\"text\"\r\n//     class=\"form-control\"\r\n//     value={bannerContentFrench}\r\n//     onChange={(e) => setBannerContentFrench(e.target.value)}\r\n// ></textarea>\r\n// <p className=\"error_mesage\"> {errors.creditProofServicesFrench} </p>\r\n// </div>\r\n"]},"metadata":{},"sourceType":"module"}