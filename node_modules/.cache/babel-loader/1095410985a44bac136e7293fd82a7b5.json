{"ast":null,"code":"import axios from \"axios\";\n\nrequire('dotenv').config();\n\nconsole.log(process.env, \"hhhhhhhhhhhhhhhhhhhhh\");\nconsole.log(process.env.REACT_APP_API_URL, \"ffffffff\");\nexport const LoginAPI = async data => {\n  console.log(\"LoginAPI\", data);\n\n  try {\n    const response = await axios.post(`${process.env.REACT_APP_API_URL}/admin/login`, data, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(\"LoginAPI response\", response);\n\n    if (response.status === 200) {\n      return {\n        data: response\n      };\n    } else {\n      throw new Error(response.message);\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return {\n      status: 400,\n      message: error.message,\n      data: \"\"\n    };\n  }\n};\n_c = LoginAPI;\nexport const ForgotAPI = async data => {\n  // console.log(\"LoginAPI\", data);\n  try {\n    const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/forgotpassword`, data, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n\n    if (response.status === 200) {\n      return {\n        data: response.data\n      };\n    } else {\n      throw new Error(response.message);\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return {\n      status: 400,\n      message: error.message,\n      data: \"\"\n    };\n  }\n};\n_c2 = ForgotAPI;\nexport const ResetAPI = async data => {\n  try {\n    const response = await axios.post(`${process.env.REACT_APP_API_URL}/admin/api/update-password`, data, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n\n    if (response.status === 200) {\n      return {\n        data: response.data\n      };\n    } else {\n      throw new Error(response.message);\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return {\n      status: 400,\n      message: error.message,\n      data: \"\"\n    };\n  }\n};\n_c3 = ResetAPI;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"LoginAPI\");\n$RefreshReg$(_c2, \"ForgotAPI\");\n$RefreshReg$(_c3, \"ResetAPI\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/credit/src/api/AuthApi.js"],"names":["axios","require","config","console","log","process","env","REACT_APP_API_URL","LoginAPI","data","response","post","headers","status","Error","message","error","ForgotAPI","ResetAPI"],"mappings":"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","sourcesContent":["\r\nimport axios from \"axios\";\r\nrequire('dotenv').config()\r\n\r\n\r\nconsole.log(process.env,\"hhhhhhhhhhhhhhhhhhhhh\");\r\nconsole.log(process.env.REACT_APP_API_URL,\"ffffffff\");\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const LoginAPI = async (data) => {\r\n    console.log(\"LoginAPI\", data);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/admin/login`,\r\n        data,\r\n        { headers: { \"Content-Type\": \"application/json\" } }\r\n      );\r\n      console.log(\"LoginAPI response\", response);\r\n      if (response.status === 200) {\r\n  \r\n        return {\r\n          data: response,\r\n        };\r\n      } else {\r\n        throw new Error(response.message);\r\n      }\r\n  \r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n      return {\r\n        status: 400,\r\n        message: error.message,\r\n        data: \"\",\r\n      };\r\n    }\r\n  }\r\n  \r\n  \r\n  export const ForgotAPI = async (data) => {\r\n    // console.log(\"LoginAPI\", data);\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/api/forgotpassword`,\r\n         data,\r\n        { headers: { \"Content-Type\": \"application/json\" } }\r\n      );\r\n      if (response.status === 200) {\r\n  \r\n        return {\r\n          data: response.data,\r\n        };\r\n      } else {\r\n        throw new Error(response.message);\r\n      }\r\n  \r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n      return {\r\n        status: 400,\r\n        message: error.message,\r\n        data: \"\",\r\n      };\r\n    }\r\n  }\r\n  \r\n  \r\n  export const ResetAPI = async (data) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/admin/api/update-password`,\r\n        data,\r\n        { headers: { \"Content-Type\": \"application/json\" } }\r\n      );\r\n      if (response.status === 200) {\r\n  \r\n        return {\r\n          data: response.data,\r\n        };\r\n      } else {\r\n        throw new Error(response.message);\r\n      }\r\n  \r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n      return {\r\n        status: 400,\r\n        message: error.message,\r\n        data: \"\",\r\n      };\r\n    }\r\n  }\r\n  \r\n  "]},"metadata":{},"sourceType":"module"}