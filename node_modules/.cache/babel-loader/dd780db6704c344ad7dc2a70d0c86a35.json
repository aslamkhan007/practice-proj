{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\credit\\\\src\\\\components\\\\EditHomePage\\\\OurHappyClient.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport * as USERAPI from \"../../api/EditHomePageApi\";\nimport * as CONFIG from \"../../config.json\";\nimport { CreateNotification } from \"../../Utils/notification\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { usePlacesWidget } from \"react-google-autocomplete\";\nimport { Loader } from \"../common/Loader/loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OurHappyClient = props => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [clientsName, setClientsName] = useState('');\n  const [clientImage, setClientImage] = useState('');\n  const [clientsTextInFrench, setClientsTextInFrench] = useState('');\n  const [clientsTextInEnglish, setClientsTextInEnglish] = useState('');\n  const [errors, setErrors] = useState([]);\n\n  const imageHandle = e => {\n    const fileValid = e.target.files[0].type;\n\n    if (fileValid == \"image/png\" || fileValid == \"image/jpg\" || fileValid == \"image/jpeg\") {\n      setClientImage(e.target.files[0]);\n      console.log(e.target.files[0]);\n    } else {\n      CreateNotification('warning', \"please selete photo\");\n    }\n  };\n\n  const isFormValid = e => {\n    let error = {};\n    let formIsValid = true;\n\n    if (!clientsName || !clientsName.trim()) {\n      formIsValid = false;\n      error['clientsName'] = \"Please Enter your clientsName \";\n    }\n\n    if (!clientsTextInFrench || !clientsTextInFrench.trim()) {\n      formIsValid = false;\n      error['clientsTextInFrench'] = \"Please Enter your Client Text InF rench\";\n    }\n\n    if (!clientsTextInEnglish && !clientsTextInEnglish.trim()) {\n      formIsValid = false;\n      error['clientsTextInEnglish'] = \"Please Enter your Client Text In English\";\n    }\n\n    if (!clientImage && !clientImage.trim()) {\n      formIsValid = false;\n      error['clientImage'] = \"Please Enter your Client Image\";\n    }\n\n    setErrors(error);\n    return formIsValid;\n  };\n\n  const EditHomepage = async () => {\n    const isValid = await isFormValid();\n\n    if (isValid) {\n      let formData = new FormData();\n      formData.append(\"clientsName\", clientsName);\n      formData.append(\"clientsTextInFrench\", clientsTextInFrench);\n      formData.append(\"clientsTextInEnglish\", clientsTextInEnglish);\n      formData.append(\"clientImage\", clientImage);\n      const Response = await USERAPI.UpdateHappyClientPageAPI(formData);\n\n      if (Response.data.status == 200) {\n        CreateNotification(\"success\", \"Credit Proof Happy Updated Successfully\");\n        setLoading(false);\n      } else if (Response.data.status == 401) {\n        CreateNotification(\"danger\", \"Session has been expired!\");\n        localStorage.clear();\n        props.history.push('/login');\n      } else {\n        CreateNotification(\"danger\", \"Something went wrong, please try again later!\");\n      }\n    }\n  };\n\n  const getHomePageDataFun = async () => {\n    const Response = await USERAPI.getHomePageDataAPI(); // console.log(Response,\"tttttttttttttttttttttttttttttttttttttttttttt\");\n\n    if (Response.data.status == 200) {\n      const allData = Response && Response.data && Response.data.data; //   console.log(allData[0].creditProofServicesEnglish,\"hello\");\n\n      setClientsName(allData.clientsName);\n      setClientsTextInFrench(allData.clientsTextInFrench);\n      setClientsTextInEnglish(allData.clientsTextInEnglish);\n      setClientImage(clientImage);\n    } else if (Response.data.status == 401) {\n      CreateNotification(\"danger\", \"Session has been expired!\");\n      localStorage.clear();\n      props.history.push('/login');\n    } else {\n      CreateNotification(\"danger\", \"Something went wrong, please try again later!\");\n    }\n  };\n\n  useEffect(async () => {\n    getHomePageDataFun();\n  }, []);\n\n  const updateUserFun = async () => {};\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 grid-margin\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between flex-wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex align-items-end flex-wrap\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mr-md-3 mr-xl-5\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Add Our Happy Clients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 grid-margin\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body home-page-admin-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group fullNameSec col-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"fullName\",\n                  children: \"Our  Happy Clients Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  class: \"form-control\",\n                  value: clientsName,\n                  onChange: e => setClientsName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error_mesage\",\n                  children: [\" \", errors.clientsName, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group fullNameSec browseSec col-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Upload Our Happy clients image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"uploadBtn\",\n                  for: \"upload\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"uploadIcon\",\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fa fa-upload\",\n                      \"aria-hidden\": \"true\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 70\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    class: \"isVisuallyHidden1\",\n                    id: \"upload\",\n                    type: \"file\",\n                    onChange: imageHandle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"m-0\",\n                    children: \"upload\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error_mesage\",\n                  children: [\" \", errors.clientImage, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group fullNameSec col-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"fullName\",\n                  children: \"Our Happy Clients Text In English\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  type: \"text\",\n                  class: \"form-control\",\n                  value: clientsTextInEnglish,\n                  onChange: e => setClientsTextInEnglish(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error_mesage\",\n                  children: [\" \", errors.clientsTextInEnglish, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group fullNameSec col-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"fullName\",\n                  children: \"Our Happy Clients Text In French\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  type: \"text\",\n                  class: \"form-control\",\n                  value: clientsTextInFrench,\n                  onChange: e => setClientsTextInFrench(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error_mesage\",\n                  children: [\" \", errors.clientsTextInFrench, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-12\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-update\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => EditHomepage(),\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 24\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OurHappyClient, \"P7k/BQ0ffuLD6ehyDB4MPpMje0E=\", false, function () {\n  return [useParams];\n});\n\n_c = OurHappyClient;\nexport default OurHappyClient;\n\nvar _c;\n\n$RefreshReg$(_c, \"OurHappyClient\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/credit/src/components/EditHomePage/OurHappyClient.js"],"names":["React","useState","useEffect","USERAPI","CONFIG","CreateNotification","Link","useParams","usePlacesWidget","Loader","OurHappyClient","props","id","loading","setLoading","clientsName","setClientsName","clientImage","setClientImage","clientsTextInFrench","setClientsTextInFrench","clientsTextInEnglish","setClientsTextInEnglish","errors","setErrors","imageHandle","e","fileValid","target","files","type","console","log","isFormValid","error","formIsValid","trim","EditHomepage","isValid","formData","FormData","append","Response","UpdateHappyClientPageAPI","data","status","localStorage","clear","history","push","getHomePageDataFun","getHomePageDataAPI","allData","updateUserFun","value"],"mappings":"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","sourcesContent":["\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport * as USERAPI from \"../../api/EditHomePageApi\";\r\nimport * as CONFIG from \"../../config.json\";\r\nimport { CreateNotification } from \"../../Utils/notification\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { usePlacesWidget } from \"react-google-autocomplete\";\r\nimport { Loader } from \"../common/Loader/loader\";\r\nconst OurHappyClient = (props) => {\r\n    const { id } = useParams()\r\n    const [loading, setLoading] = useState(false)\r\n    const [clientsName, setClientsName] = useState('')\r\n    const [clientImage, setClientImage] = useState('')\r\n    const [clientsTextInFrench, setClientsTextInFrench] = useState('')\r\n    const [clientsTextInEnglish, setClientsTextInEnglish] = useState('')\r\n    const [errors, setErrors] = useState([])\r\n\r\n\r\n\r\n    const imageHandle = (e) => {\r\n        const fileValid = e.target.files[0].type\r\n        if (fileValid == \"image/png\" || fileValid == \"image/jpg\" ||\r\n            fileValid == \"image/jpeg\") {\r\n                setClientImage(e.target.files[0])\r\n            console.log(e.target.files[0]);\r\n        } else {\r\n            CreateNotification('warning', \"please selete photo\")\r\n        }\r\n    }\r\n\r\n    const isFormValid= (e) => {\r\n        let error = {};\r\n        let formIsValid = true;\r\n        if (!clientsName || !clientsName.trim()) {\r\n            formIsValid = false;\r\n            error['clientsName'] = \"Please Enter your clientsName \"\r\n        }\r\n        if (!clientsTextInFrench || !clientsTextInFrench.trim()) {\r\n            formIsValid = false;\r\n            error['clientsTextInFrench'] = \"Please Enter your Client Text InF rench\"\r\n        }\r\n        if (!clientsTextInEnglish && !clientsTextInEnglish.trim()) {\r\n            formIsValid = false\r\n            error['clientsTextInEnglish'] = \"Please Enter your Client Text In English\"\r\n        }   if (!clientImage && !clientImage.trim()) {\r\n            formIsValid = false\r\n            error['clientImage'] = \"Please Enter your Client Image\"\r\n        }\r\n        setErrors(error)\r\n        return formIsValid;\r\n    }\r\n    const EditHomepage = async () => {\r\n        const isValid = await isFormValid();\r\n        if (isValid) {\r\n        let formData = new FormData();\r\n        formData.append(\"clientsName\", clientsName)\r\n        formData.append(\"clientsTextInFrench\", clientsTextInFrench)\r\n        formData.append(\"clientsTextInEnglish\", clientsTextInEnglish)\r\n        formData.append(\"clientImage\", clientImage)\r\n        const Response = await USERAPI.UpdateHappyClientPageAPI(formData);\r\n        if (Response.data.status == 200) {\r\n            CreateNotification(\"success\", \"Credit Proof Happy Updated Successfully\")\r\n            setLoading(false)\r\n        }\r\n        else if (Response.data.status == 401) {\r\n            CreateNotification(\"danger\", \"Session has been expired!\")\r\n            localStorage.clear();\r\n            props.history.push('/login')\r\n        }\r\n        else {\r\n            CreateNotification(\"danger\", \"Something went wrong, please try again later!\")\r\n        }\r\n    }\r\n    }\r\n\r\n    \r\n    const getHomePageDataFun = async () => {\r\n        const Response = await USERAPI.getHomePageDataAPI();\r\n        // console.log(Response,\"tttttttttttttttttttttttttttttttttttttttttttt\");\r\n        if (Response.data.status == 200) {\r\n            const allData = Response && Response.data && Response.data.data\r\n            //   console.log(allData[0].creditProofServicesEnglish,\"hello\");\r\n            setClientsName(allData.clientsName)\r\n            setClientsTextInFrench(allData.clientsTextInFrench)\r\n            setClientsTextInEnglish(allData.clientsTextInEnglish)   \r\n            setClientImage(clientImage)\r\n        }\r\n        else if (Response.data.status == 401) {\r\n            CreateNotification(\"danger\", \"Session has been expired!\");\r\n            localStorage.clear();\r\n            props.history.push('/login')\r\n        }\r\n        else {\r\n            CreateNotification(\"danger\", \"Something went wrong, please try again later!\")\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(async () => {\r\n        getHomePageDataFun();\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    const updateUserFun = async () => {\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 grid-margin\">\r\n                    <div className=\"d-flex justify-content-between flex-wrap\">\r\n                        <div className=\"d-flex align-items-end flex-wrap\">\r\n                            <div className=\"mr-md-3 mr-xl-5\">\r\n                                <h3>Add Our Happy Clients</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 grid-margin\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body home-page-admin-form\">\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group fullNameSec col-6\">\r\n                                    <label for=\"fullName\">Our  Happy Clients Name</label>\r\n                                    <input type=\"text\"\r\n                                        class=\"form-control\"\r\n                                        value={clientsName}\r\n                                        onChange={(e) => setClientsName(e.target.value)}\r\n                                    />\r\n                                    <p className=\"error_mesage\"> {errors.clientsName} </p>\r\n                                </div>\r\n                                <div className=\"form-group fullNameSec browseSec col-6\">\r\n                                    <label>Upload Our Happy clients image</label>\r\n                                    <label className=\"uploadBtn\" for=\"upload\">\r\n                                        <span className=\"uploadIcon\"><i className=\"fa fa-upload\" aria-hidden=\"true\"></i></span>\r\n                                        <input class=\"isVisuallyHidden1\" id=\"upload\" type=\"file\"\r\n                                            onChange={imageHandle}\r\n                                        />\r\n                                        <p className=\"m-0\">upload</p>\r\n                                    </label>\r\n                                    <p className=\"error_mesage\"> {errors.clientImage} </p>\r\n                                </div>\r\n                                <div className=\"form-group fullNameSec col-6\">\r\n                                    <label for=\"fullName\">Our Happy Clients Text In English</label>\r\n                                    <textarea type=\"text\"\r\n                                        class=\"form-control\"\r\n                                        value={clientsTextInEnglish}\r\n                                        onChange={(e) => setClientsTextInEnglish(e.target.value)}\r\n                                    ></textarea>\r\n                                    <p className=\"error_mesage\"> {errors.clientsTextInEnglish} </p>\r\n                                </div>\r\n                                <div className=\"form-group fullNameSec col-6\">\r\n                                    <label for=\"fullName\">Our Happy Clients Text In French</label>\r\n                                    <textarea type=\"text\"\r\n                                        class=\"form-control\"\r\n                                        value={clientsTextInFrench}\r\n                                        onChange={(e) => setClientsTextInFrench(e.target.value)}\r\n                                    ></textarea>\r\n                                    <p className=\"error_mesage\"> {errors.clientsTextInFrench} </p>\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12\">\r\n                                    <div className=\"form-update\">\r\n                                        <button onClick={() => EditHomepage()}>Update</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {loading ? <Loader /> : null}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default OurHappyClient;\r\n\r\n"]},"metadata":{},"sourceType":"module"}