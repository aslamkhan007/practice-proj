{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\credit\\\\src\\\\components\\\\Profile\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport * as USERAPI from \"../../api/userApi\";\nimport * as CONFIG from \"../../config.json\";\nimport { CreateNotification } from \"../../Utils/notification\";\nimport { userContext } from \"../../context/userContext\";\nimport { usePlacesWidget } from \"react-google-autocomplete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = props => {\n  _s();\n\n  var context = useContext(userContext);\n  const [error, setError] = useState({});\n  const [data, setData] = useState();\n  const [fullName, setFullName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [email, setEmail] = useState('');\n  const [address, setAddress] = useState('');\n  const [id, setId] = useState('');\n  const [userId, setUserId] = useState(localStorage.getItem(\"id\"));\n  const {\n    ref\n  } = usePlacesWidget({\n    apiKey: \"AIzaSyA2SLnbBZFr3bo3mL5g6QiWAstdUuKaq30\",\n    onPlaceSelected: place => {\n      console.log(place, \"jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj\");\n      setAddress(place.formatted_address); // Geocode.fromAddress(place.formatted_address).then(\n      //     (response) => {\n      //         const { lat, lng } = response.results[0].geometry.location;\n      //         console.log(lat, lng);\n      //         const Latlng = {\n      //             lat, lng\n      //         }\n      //         setLatLng(Latlng)\n      //         Geocode.fromLatLng(lat, lng).then(\n      //             (response) => {\n      //                 const address = response.results[0].formatted_address;\n      //                 let city, state, country, postal_code;\n      //                 for (let i = 0; i < response.results[0].address_components.length; i++) {\n      //                     for (let j = 0; j < response.results[0].address_components[i].types.length; j++) {\n      //                         switch (response.results[0].address_components[i].types[j]) {\n      //                             case \"locality\":\n      //                                 city = response.results[0].address_components[i].long_name;\n      //                                 break;\n      //                             case \"administrative_area_level_1\":\n      //                                 state = response.results[0].address_components[i].long_name;\n      //                                 break;\n      //                             case \"country\":\n      //                                 country = response.results[0].address_components[i].long_name;\n      //                                 break;\n      //                             case \"postal_code\":\n      //                                 postal_code = response.results[0].address_components[i].long_name;\n      //                                 break;\n      //                         }\n      //                     }\n      //                 }\n      //                 setCity(city)\n      //                 setCountry(country)\n      //                 setProvince(state)\n      //                 setPostalCode(postal_code)\n      //                 console.log(address);\n      //             },\n      //             (error) => {\n      //                 console.error(error);\n      //             }\n      //         );\n      //     },\n      //     (error) => {\n      //         console.error(error);\n      //     }\n      // );\n    },\n    options: {\n      types: [\"establishment\"]\n    }\n  });\n\n  const isFormValid = () => {\n    console.log(phoneNumber.length, \"JJJJJJJJJJJJJ\");\n    var regex_email = /^(([^!<>#$%^&*()[\\]\\\\.,;:\\s@\\\"]+(\\.[^#$%^&*!<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const mobPattern = /^[0-9]{10}$/;\n\n    if (!fullName) {\n      setError({\n        fullName: \"First name is required!\"\n      });\n      return false;\n    } else if (!address) {\n      setError({\n        address: \"Last name is required!\"\n      });\n      return false;\n    } else if (!phoneNumber) {\n      setError({\n        phoneNumber: \"Last name is required!\"\n      });\n      return false;\n    } else if (phoneNumber && mobPattern.test(phoneNumber) === false) {\n      setError({\n        phoneNumber: \"Enter valid number!\"\n      });\n      return false;\n    } else {\n      setError({});\n      return true;\n    }\n  };\n\n  const handleSubmit = async () => {\n    const isValid = await isFormValid();\n\n    if (isValid) {\n      const data = {\n        fullName,\n        email,\n        phoneNumber,\n        email,\n        address\n      };\n      const Response = await USERAPI.UpdateProfileAPI(data, id);\n\n      if (Response.data.status == 200) {\n        CreateNotification(\"success\", Response.data.message);\n        let userData = JSON.parse(localStorage.getItem('userData'));\n        console.log(fullName, \"jjj999999999999999999jjjjjjjjjjjjjjjjjj\");\n        if (userData) console.log(userData, \"userData   userData\");\n        {\n          userData.data.fullName = fullName;\n          localStorage.setItem(\"userData\", JSON.stringify(userData));\n        }\n        context.UpdateUserContext({ ...context.user,\n          fullName: fullName\n        });\n      } else if (Response.data.status == 401) {\n        CreateNotification(\"danger\", \"Session has been expired!\");\n        localStorage.clear();\n        props.history.push('/login');\n      } else {\n        CreateNotification(\"danger\", Response.data.message);\n      }\n    }\n  };\n\n  const getSingleUser = async () => {\n    const Response = await USERAPI.getUserById(userId);\n\n    if (Response.data.status == 200) {\n      const userData = Response && Response.data && Response.data.data;\n      setFullName(userData && userData.fullName);\n      setPhoneNumber(userData && userData.phoneNumber);\n      setEmail(userData && userData.email);\n      setAddress(userData && userData.address);\n      setId(userData && userData._id);\n    } else if (Response.data.status == 401) {\n      CreateNotification(\"danger\", \"Session has been expired!\");\n      localStorage.clear();\n      props.history.push('/login');\n    } else {\n      CreateNotification(\"danger\", \"Something went wrong, please try again later!\");\n    }\n  };\n\n  useEffect(async () => {\n    getSingleUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-12 grid-margin\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"card-title\",\n          children: \"Profile update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-8\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"col-sm-3 col-form-label\",\n                children: \"fullName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-9\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"fullName\",\n                  value: fullName,\n                  onChange: e => setFullName(e.target.value),\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"form-error\",\n                  children: error.fullName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-8\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"col-sm-3 col-form-label\",\n                children: \"address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-9\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  ref: ref,\n                  type: \"text\",\n                  name: \"address\",\n                  value: address,\n                  min: 1,\n                  onChange: e => setAddress(e.target.value),\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"form-error\",\n                  children: error.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-8\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"col-sm-3 col-form-label\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-9\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"no_collaborator\",\n                  value: email,\n                  onChange: e => setEmail(e.target.value),\n                  className: \"form-control\",\n                  readOnly: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-8\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"col-sm-3 col-form-label\",\n                children: \"phoneNumber\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-9\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"phoneNumber\",\n                  value: phoneNumber,\n                  onChange: e => setPhoneNumber(e.target.value),\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"form-error\",\n                  children: error.phoneNumber\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          class: \"btn btn-primary mr-2\",\n          onClick: () => {\n            handleSubmit();\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Dashboard, \"e/nbrmrpVZTX7S/AlE2i5Yu2pZU=\", false, function () {\n  return [usePlacesWidget];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/credit/src/components/Profile/Profile.js"],"names":["React","useState","useEffect","useContext","USERAPI","CONFIG","CreateNotification","userContext","usePlacesWidget","Dashboard","props","context","error","setError","data","setData","fullName","setFullName","phoneNumber","setPhoneNumber","email","setEmail","address","setAddress","id","setId","userId","setUserId","localStorage","getItem","ref","apiKey","onPlaceSelected","place","console","log","formatted_address","options","types","isFormValid","length","regex_email","mobPattern","test","handleSubmit","isValid","Response","UpdateProfileAPI","status","message","userData","JSON","parse","setItem","stringify","UpdateUserContext","user","clear","history","push","getSingleUser","getUserById","_id","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect,useContext } from \"react\";\nimport * as USERAPI from \"../../api/userApi\";\nimport * as CONFIG from \"../../config.json\";\nimport { CreateNotification } from \"../../Utils/notification\";\nimport {\n  userContext,\n} from \"../../context/userContext\";\nimport { usePlacesWidget } from \"react-google-autocomplete\";\nconst Dashboard = (props) => {\nvar  context = useContext(userContext);\n\n \n  const [error, setError] = useState({});\n  const [data, setData] = useState();\n  const [fullName, setFullName] = useState('')\n  const [phoneNumber, setPhoneNumber] = useState('')\n  const [email, setEmail] = useState('')\n  const [address, setAddress] = useState('')\n  const  [id,setId]=useState('')\n  const [userId, setUserId]=useState(localStorage.getItem(\"id\"))\n  const { ref } = usePlacesWidget({\n    apiKey: \"AIzaSyA2SLnbBZFr3bo3mL5g6QiWAstdUuKaq30\",\n    onPlaceSelected: (place) => {\n        console.log(place,\"jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj\");\n        setAddress(place.formatted_address)\n        // Geocode.fromAddress(place.formatted_address).then(\n        //     (response) => {\n        //         const { lat, lng } = response.results[0].geometry.location;\n        //         console.log(lat, lng);\n        //         const Latlng = {\n        //             lat, lng\n        //         }\n        //         setLatLng(Latlng)\n        //         Geocode.fromLatLng(lat, lng).then(\n        //             (response) => {\n        //                 const address = response.results[0].formatted_address;\n        //                 let city, state, country, postal_code;\n        //                 for (let i = 0; i < response.results[0].address_components.length; i++) {\n        //                     for (let j = 0; j < response.results[0].address_components[i].types.length; j++) {\n        //                         switch (response.results[0].address_components[i].types[j]) {\n        //                             case \"locality\":\n        //                                 city = response.results[0].address_components[i].long_name;\n        //                                 break;\n        //                             case \"administrative_area_level_1\":\n        //                                 state = response.results[0].address_components[i].long_name;\n        //                                 break;\n        //                             case \"country\":\n        //                                 country = response.results[0].address_components[i].long_name;\n        //                                 break;\n        //                             case \"postal_code\":\n        //                                 postal_code = response.results[0].address_components[i].long_name;\n        //                                 break;\n        //                         }\n        //                     }\n        //                 }\n        //                 setCity(city)\n        //                 setCountry(country)\n        //                 setProvince(state)\n        //                 setPostalCode(postal_code)\n        //                 console.log(address);\n        //             },\n        //             (error) => {\n        //                 console.error(error);\n        //             }\n        //         );\n        //     },\n        //     (error) => {\n        //         console.error(error);\n        //     }\n        // );\n    },\n    options: {\n        types: [\"establishment\"],\n\n    },\n});\n\n  const isFormValid = () => {\n    \n    console.log(phoneNumber.length,\"JJJJJJJJJJJJJ\");\n    var regex_email = /^(([^!<>#$%^&*()[\\]\\\\.,;:\\s@\\\"]+(\\.[^#$%^&*!<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const mobPattern = /^[0-9]{10}$/\n    if (!fullName) {\n\n      setError({ fullName: \"First name is required!\"});\n        return false;\n    }\n    else if (!address) {\n      setError({ address: \"Last name is required!\"});\n        return false;\n    }\n    else if (!phoneNumber) {\n      setError({ phoneNumber: \"Last name is required!\"});\n        return false;\n    }\n    else if (phoneNumber && mobPattern.test(phoneNumber)===false) {\n      setError({ phoneNumber: \"Enter valid number!\"});\n        return false;\n    }\n    else {\n      setError({});\n        return true;\n    }\n\n}\n  const handleSubmit = async() =>\n  {\n    const isValid = await isFormValid();\n\n    if(isValid)\n    {\n      const data ={\n        fullName,\n        email,\n        phoneNumber,\n        email,\n        address\n\n      }\n      const Response = await USERAPI.UpdateProfileAPI(data,id);\n      if(Response.data.status == 200)\n      {\n        CreateNotification(\"success\",Response.data.message)\n\n        \n        let userData = JSON.parse(localStorage.getItem('userData'));\n        console.log(fullName,\"jjj999999999999999999jjjjjjjjjjjjjjjjjj\");\n          if(userData)\n          console.log(userData,\"userData   userData\");\n          {\n            userData.data.fullName = fullName;\n            localStorage.setItem(\"userData\", JSON.stringify(userData));\n          }\n        context.UpdateUserContext({...context.user,fullName:fullName});\n      }\n      else if(Response.data.status == 401)\n      {\n      CreateNotification(\"danger\",\"Session has been expired!\")\n        localStorage.clear();\n        props.history.push('/login')\n      }\n      else\n      {\n      CreateNotification(\"danger\",Response.data.message)\n      }\n    }\n    \n  }\n\n  const getSingleUser= async() =>\n  {\n      const Response = await  USERAPI.getUserById(userId)\n      if(Response.data.status == 200){\n        const userData = Response && Response.data && Response.data.data \n        setFullName(userData&& userData.fullName)\n        setPhoneNumber(userData&& userData.phoneNumber)\n        setEmail(userData&& userData.email)\n        setAddress(userData&& userData.address)\n        setId(userData&& userData._id)\n      }\n      else if(Response.data.status == 401)\n      {\n      CreateNotification(\"danger\",\"Session has been expired!\")\n        localStorage.clear();\n        props.history.push('/login')\n      }\n      else\n      {\n      CreateNotification(\"danger\",\"Something went wrong, please try again later!\")\n      }\n     \n  }\n\n\n  useEffect(async()=>{\n    getSingleUser();\n  },[]);\n\n\n    return (\n      <div className=\"col-12 grid-margin\">\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h4 className=\"card-title\">Profile update</h4>\n   \n         \n            <div className=\"row\">\n              <div className=\"col-md-8\">\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-3 col-form-label\">fullName</label>\n                  <div className=\"col-sm-9\">\n                    <input type=\"text\" name=\"fullName\" value={fullName} onChange={(e) => setFullName(e.target.value)} className=\"form-control\" />\n                    <span class=\"form-error\">{error.fullName}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-8\">\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-3 col-form-label\">address</label>\n                  <div className=\"col-sm-9\">\n                    <input ref={ref} type=\"text\" name=\"address\" value={address} min={1} onChange={(e) => setAddress(e.target.value)} className=\"form-control\" />\n                    <span class=\"form-error\">{error.address}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-8\">\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-3 col-form-label\">Email</label>\n                  <div className=\"col-sm-9\">\n                    <input type=\"text\" name=\"no_collaborator\" value={email} onChange={(e)=>setEmail(e.target.value)} className=\"form-control\" readOnly/>\n                  \n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n            <div className=\"col-md-8\"> \n              <div className=\"form-group row\">\n                <label className=\"col-sm-3 col-form-label\">phoneNumber</label>\n                <div className=\"col-sm-9\">\n                  <input type=\"text\" name=\"phoneNumber\" value={phoneNumber} onChange={(e) => setPhoneNumber(e.target.value\n                    )} className=\"form-control\" />\n                  <span class=\"form-error\">{error.phoneNumber}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n\n            <button type=\"submit\" class=\"btn btn-primary mr-2\" onClick={() => {handleSubmit()}}>Submit</button>\n           \n        \n        </div>\n      </div>\n    </div>\n    );\n};\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}